
테이블 관리

학습내용
❖ DDL을 이용한 테이블 관리
❖ GUI 방식을 이용한 테이블 관리

학습목표
❖ DDL 명령어의 종류와 기능을 알고 구조적 특징을 설명할 수 있다.
❖ MySQL의 GUI 방식을 사용하여 테이블을 관리할 수 있다

DDL을 이용한 테이블 관리

◈ 테이블 생성
▷ 테이블
● 관계형 모델에서 2차원 표 형태의 데이터 저장 단위
● 사용자가 다루는 데이터의 접근 단위로 실제 데이터가 저장되는 공간

▷ 테이블
	테이블 생성이란?
	한 개 이상의 컬럼과 컬럼에 대한 제약 조건
● 「컬럼명 데이터타입 제약조건」 형식을 사용하여 컬럼을 명시

▷ 테이블 생성 방법
	포워드 엔지니어		SQL구문	내비게이터 패널
	
▷ 테이블 생성 구문

	명령어		객체		
	CREATE	----TABLE	---→ 테이블 생성
	ALTER		INDEX		
	DROP		VIEW	
				..		
				SCHEMA			
	
구문형식
CREATE TABLE 테이블이름(
	[컬럼이름 데이터타입 [제약 조건],
	[PRIMARY KEY 컬럼이름]
	[UNIQUE 컬럼이름]
	[FOREIGN KEY 컬럼이름 REFERENCES 테이블이름(컬럼이름)]
);

▷ 제약 조건
● 테이블과 테이블에 존재하는 데이터를 보다 세밀하게 관리하기 위한 목적으로 사용
● DBMS는 테이블 조작 시 테이블에 정의된 제약 조건의 만족 여부를 지속적으로 검사

▷ 제약 조건의 종류
PRIMARY KEY
	기본키를 지정, UNIQUE 와 NOT NULL 특성
FOREIGN KEY
	외래키를 지정, 참조 대상 컬럼 정의
NOT NULL
	NULL 이 될 수 없는 컬럼에 지정
UNIQUE
	동일한 컬럼 값을 가질 수 없음을 지정
AUTO_INCREMENT
	레코드가 추가될 때 자동적으로 지정한 초기값부터 1씩 증가되어 입력
CHECK
	컬럼값이 특정 조건 준수 여부 지정(ENUM 데이터 타입으로 대체)

▷ 테이블 생성의 예
CREATE TABLE 게시판(
	게시판번호	INT			AUTO_INCREMENT PRIMARY KEY,
	제목		VARCHAR(200) NOT NULL UNIQUE,
	작성일	DATETIME	NOT NULL,
	조회수	INT			DEFAULT 1,
	작성자ID	CHAR(4)		NOT NULL,
	FOREIGN KEY (작성자ID) REFERENCES(사용자ID)
)
	
◈ 테이블 수정
▷ 테이블 수정의 개념
● 생성된 테이블의 데이터 삭제를 하지 않고 테이블을 변형하기 위한 기능
● 생성된 테이블에 컬럼을 추가, 수정(이름, 데이터 타입 제약조건) 또는 삭제하는 명령

▷ 테이블 수정 방법
	SQL 구문 			내비게이터 패널
	
▷ 테이블 수정구문
	명령어		객체		
	ALTER	----TABLE	---→ 테이블 생성
	CREATE		INDEX		
	DROP		VIEW	
				..		
				SCHEMA	
구문형식
ALTER TABLE 테이블이름
	[ADD COLUMN 컬럼이름 데이터타입
		[NOT NULL | NULL] [DEFAULT 기본값],
	...]
	[DROP COLUMN 컬럼이름, ...]
	[CHANGE COLUMN 수정전컬럼이름 수정후컬럼이름 데이터타입
		[NOT NULL | NULL] [DEFAULT 기본값] 
	...]

▷ 테이블 수정 예
ALTER TABLE 강의
	ADD COLUMN 수상경력 VARCHAR(200) DEFAULT '성적우수장학금'
	
ALTER TABLE 강의
	CHANGE COLUMN 수상경력 경력 VARCHAR(200) DEFAULT '성적우수장학금'
	
ALTER TABLE 강의
	DROP COLUMN 경력

◈ 테이블 삭제
▷ 테이블 삭제의 개념
● 존재하는 테이블을 스키마에서 삭제
● 삭제할 테이블의 모든 데이터가 소실, 복구 불가능하므로 주의 요구

▷ 테이블 삭제 방법
	SQL 구문 			내비게이터 패널

▷ DROP 구문 형식
	명령어		객체		
	DROP	----TABLE	---→ 테이블 삭제
	CREATE		INDEX		
	ALTER		VIEW	
				..		
				SCHEMA	
구문형식
	DROP TABLE 테이블이름

▷ DROP 구문의 예
	DROP TABLE 수강신청

DDL을 이용한 테이블 관리


GUI 방식을 이용한 테이블 관리
◈ 테이블 생성
▷ 테이블 생성 메뉴
● 테이블을 생성하기 전, 관련 테이블 생성 메뉴를 확인하고, 선택을 합니다.

▷ 테이블 생성 UI
● 테이블 생성 UI를 생성합니다. 테이블을 생성한 뒤 테이블의 수정 메뉴를 확인하고, 선택합니다. 

◈ 테이블 수정
▷ 테이블 수정 메뉴
● 수정 메뉴를 선택 한 후 각 항목을 수정 또는 추가 합니다.

▷ 테이블 수정 메뉴 UI
● 테이블 생성 UI를 생성합니다.

◈ 테이블 삭제
▷ 테이블 삭제 메뉴
● 테이블을 삭제해야 할 경우, 테이블 메뉴에서 삭제 버튼을 클릭합니다.

▷ 테이블 삭제 확인
● 테이블을 삭제되었는지 확인 창을 통해 확인할 수 있습니다.


GUI 방식을 이용한 테이블 관리

핵심요약
DDL 구문을 이용한 테이블 관리
❖ 테이블 생성이란?
- 사용자가 다루는 데이터의 접근 단위로 실제 데이터가 저장되는 공간을 말하며 테이블 생성 시,
 「컬럼명 데이터 타입 제약조건」형식을 사용하여 컬럼을 정의
❖ 테이블 생성시 제약 조건
- 테이블과 테이블에 존재하는 데이터를 보다 세밀하게 관리하기 위한 목적으로 사용
- DBMS는 테이블 조작 시 테이블에 정의된 제약 조건의 만족 여부를 지속적으로 검사
❖ DDL이란?
- 테이블 생성, 수정, 삭제 작업을 위해 CREATE, ALTER, DROP 명령어를 지원
- 모든 명령어는 지정된 형식으로 구조화되어야만 실행될 수 있음

GUI 방식을 이용한 테이블 관리
❖ MySQL Workbench란?
- GUI 환경에서 테이블을 관리할 수 있도록 내비게이터 패널에서 CREATE TABLE, ALTER TABLE, DROP TABLE 메뉴 항목을 제공
❖ 테이블 생성 및 수정 UI
- EER Diagram의 테이블 정의 화면과 매우 유사
- 컬럼명, 데이터 타입, 제약 조건을 키보드와 마우스를 사용하여 정의
❖ DROP 명령어를 사용하여 테이블 삭제 시
- 데이터 복구가 불가능하기 때문에 사용자 확인 절차를 거침



