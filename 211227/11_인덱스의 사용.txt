
인덱스의 사용

학습내용
❖ 인덱스의 이해
❖ 인덱스의 관리
❖ 인덱스의 사용 효과

학습목표
❖ 인덱스의 기능과 특징을 설명할 수 있다.
❖ 인덱스의 구조와 동작과정을 파악하고 DDL 구문을 사용하여 관리할 수 있다.
❖ MySQL의 인덱스의 효과를 입증할 수 있다. 

인덱스의 이해
◈ 인덱스의 개념
▷ SELECT 질의 실행
● 조건을 만족하는 레코드를 탐색
	디스크 블록		←
	↓			↑
	메모리		↑	조건 일치 검사를 만족하는
	↓			↑	레코드를 찾을 때까지 반복	
	조건 일치 검사  →

▷ SELECT 질의 실행 예
● “SELECT * FROM 학생 WHERE 학번 = ‘2014225’” 질의 실행
● 필요한 데이터 검색
	- 최선 : 1번
	- 최악 : N번
	- 평균 : N/2 번

▷ 인덱스의 정의
	인덱스란?
	데이터베이스에 존재하는 많은 양의 데이터 중에 사용자가 원하는 특정 레코드만을 찾기 위해 사용하는 별도의 자료 구조

● “데이터 검색 시, 데이터베이스의 응답시간을 단축
● 순차 탐색 : 인덱스가 정의되지 않은 컬럼 검색
● InnoDB 엔진에서는 일반적으로 B+-트리 인덱스 적용

▷ 자동 생성 인덱스
● 제약 조건에 의해서 자동으로 생성되는 인덱스
● PRIMARY KEY, UNIQUE, FOREIGN KEY 제약 조건은 인덱스를 자동 생성

CREATE TABLE 강의 (
	강의번호	INT				AUTO_INCREMENT PRIMARY KEY,
	강의이름	VARCHAR(20)		NOT NULL UNIQUE,
	강의시간	VARCHAR(20)		NOT NULL,
	인원제한	INT				DEFAULT 50,
	교수번호	CHAR(4)			NOT NULL,
	FOREIGN KEY (작성자ID) REFERENCES 사용자(ID)		
)


◈ 인덱스의 동작과정
▷ 인덱스의 사용
● DBMS는 인덱스를 통하여 레코드가 디스크 저장장치 또는 메모리의 어느 블럭에 저장되어 있는지 파악하고, 해당 블럭을 읽어 들임
	검색키 : 파일에서 레코드를 찾는데 사용되는 컬럼이나 컬럼의 집합

▷ 인덱스의 사용
DBMS 가 내부에서 검색키를 몇번만 사용하면 데이터를 찾을 수 있음
데이터 자체가 트리 형태로 구성

- 데이터 값 하나의 작거나 혹은 크거나에 따라 또 다른 노드를 가리키는 포인터가 있음
- 실질적으로 데이터가 존재하는 곳을 가리키는 포인터도 존재

SELECT * FROM 학생 WHERE 이름='소지섭';


인덱스 관리
◈ DDL 구문을 이용한 인덱스 관리
▷ 인덱스의 확인
SHOW INDEX FROM 테이블이름 [FROM 스키마이름]
	인덱스의 확인 예


▷ 인덱스 생성 구문 형식
CREATE INDEX 인덱스이름
	ON 테이블이름 (컬럼명1, 컬럼명2, ..., 컬럼명n)
	
▷ 인덱스 생성 구문 예
CREATE INDEX idx_사원_1
	ON 사원 (사원이름)
	
▷ 인덱스 삭제 구문 형식
DROP INDEX 인덱스이름 ON 테이블이름

▷ 인덱스 삭제 구문 예
DROP INDEX idx_사원_1 ON 사원

◈ GUI 방식을 이용한 인덱스 관리
▷ 인덱스 확인
	내비게이터 패널 			인포메이션 패널
	
● GUI 방식을 이용한 인덱스 관리에서 내비게이터 패널과 인포메이션 패널을 통해 인덱스를 확인할 수 있습니다.

Table maintenance 메뉴 항목 선택 

● MySQL Workbench를 이용한 인덱스 관리에서 Table maintenance 메뉴 항목을 선택하면 
Table maintenance 화면에서 인덱스를 확인할 수 있습니다.

● 인덱스를 생성하기 위해서는 Alter Table 메뉴 항목을 선택합니다. 

▷ 인덱스 생성
● Alter Table 화면에서 인덱스 탭을 확인 할 수 있습니다

Alter Table 화면의 Indexes 탭
● 인덱스를 삭제하기 위해서는 인덱스를 생성했을 경우와 같은 방법으로 실행합니다. 

▷ 인덱스 삭제
Alter Table 메뉴 항목 선택
● Alter Table 메뉴 항목을 선택 후 인덱스를 삭제할 수 있습니다.

Alter table 화면의 Indexes 탭
● 인덱스에서 삭제항목을 선택 후 삭제합니다.

인덱스의 사용 효과

◈ 환경 구축
▷ 임시 테이블 생성
CREATE TABLE sample_table(
	static_string CHAR(20),
	static_string_idx CHAR(20),
	dynamic_string CHAR(30),
	dynamic_string_idx CHAR(30),
	integer_number INT,
	integer_number_idx INT,
	float_number FLOAT,
	float_number_idx FLOAT
)
● 인덱스 사용을 위해 환경을 구축합니다

▷ 데이터 삽입
cmd
mysql -u root -p -h localhost company < datagen.sql
Enter password : adminuser

● 테이블을 생성 한 후 데이터를 삽입합니다. 

◈ 검색 효과 비교
▷ 인덱스의 생성
CREATE INDEX idx_st_static_string
	ON sample_table (static_string_idx)
	
SHOW INDEX FROM sample_table

● 생성된 인덱스 확인 후 비인덱스 컬럼과 인덱스 컬럼을 각각 조회합니다. 

▷ 비인덱스 컬럼 조회
Duration / Fetch
0.063sec / 0.000 sec
● 인덱스의 사용 분석을 각각의 비인덱스 컬럼과 인덱스 컬럼을 조회하며 확인 할 수 있습니다.

▷ 인덱스 컬럼 조회
Duration / Fetch
0.015sec / 0.000 sec
● 인덱스의 사용 분석을 각각의 비인덱스 컬럼과 인덱스 컬럼을 조회하며 확인 할 수 있습니다.

▷ 인덱스의 사용 분석
비인덱스 컬럼 조회 시 화면
Duration / Fetch
0.063 sec / 0.000 sec
● 인덱스의 사용 분석을 각각의 비인덱스 컬럼과 인덱스 컬럼을 조회하며 확인 할 수 있습니다.

인덱스 컬럼 조회 시 화면
Duration / Fetch
0.015 sec / 0.000 sec
● 인덱스의 사용 분석을 각각의 비인덱스 컬럼과 인덱스 컬럼을 조회하며 확인 할 수 있습니다.


인덱스의 사용 효과


핵심요약

인덱스의 이해

❖ 인덱스란?
- 데이터베이스에 존재하는 많은 양의 데이터 中 사용자가 원하는 특정 레코드만을 찾기 위해 사용하는 별도의 자료 구조
- 데이터 검색 시, 데이터베이스의 응답시간을단축시키는 효과가 있음

❖ 자동 생성 인덱스
- 제약 조건에 의해서 자동으로 생성되는 인덱스
- PRIMARY KEY, UNIQUE, FOREIGN KEY 제약 조건이 생성된 컬럼에 대해서는 인덱스가 자동 생성됨

인덱스의 관리
❖ 인덱스는 데이터베이스 객체이기 때문에 생성, 수정, 삭제에 CREATE, ALTER, DROP 명령어로 관리할 수 있음
❖ 인덱스 관리의 종류
- DDL 구문을 이용한 인덱스 관리
- GUI 방식을 이용한 인덱스 관리
- MySQL Workbench를 이용한인덱스 관리
❖ MySQL Workbench
- 인덱스를 GUI 방식으로 관리할 수 있는 메뉴 항목과 UI를 제공함

인덱스의 사용 효과
❖ 단축의 효과
- 인덱스는 검색의 성능을 비약적으로 단축시키는 효과가 있음
❖ 인덱스의 사용 여부 분석
- EXPLAIN 구문을 활용하여 검색 과정에서 인덱스의 사용 여부를 분석할 수 있음
❖ 인덱스 사용의 장·단점
- 인덱스는 검색의 성능을 향상시키는 반면 데이터 입력, 수정, 삭제에는 성능이 감소함
