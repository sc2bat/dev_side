응용 SW 기초 활용 기술 part 2
NoSQL 데이터베이스

MongoDB의 이해
MongoDB의 시작

NoSQL 데이터베이스인 MongoDB의 특징과 주요 개념을 설명할 수 있다.
MongoDB를 설치하고, 실행하여 문서(Document)를 추가할 수 있다. 

MongoDB의 이해

1. MongoDB의 개요

NoSQL 데이터베이스 타입

데이터 모델 설계 방식

문서(Document) 모델
키-값(Key-value) 모델
컬럼(Column) 모델
그래프(Graph) 모델

MongoDB의 역사

2007년
소프트웨어 회사인 10gen에서 서비스 제공을 위한플랫폼의 구성요소로 MongoDB가 개발됨
MongoDB는 ‘거대한’이라는 뜻을 가진 Humongous에서 이름이 유래됨

2009년
10gen은 오픈 소스 개발 모델로 MongoDB를 발표함

2013년
10gen은 지금의 MongoDB로 사명을 개정함

MongoDB의 특징
1 문서지향 데이터베이스
내장 문서와 배열의 사용이 가능하여 데이터 간 복잡한 계층 관계를 하나로 표현

2 문서의 필드와 값을 미리 정의하지 않음
고정된 형태인 스키마가 없어 필드를 추가하거나 제거하는 것이 쉬워짐

3 데이터의 분산을 쉽게 해줌
문서를 자동으로 재분배
사용자의 요청을 적합한 서버에 라우팅

2. MongoDB의 주요 개념
관계형 데이터베이스와 MongoDB의 개념 비교

관계형 데이터베이스 	MongoDB
데이터베이스(Database) 	데이터베이스(Database)
테이블(Table) 		콜렉션(Collection)
행(Row) 			문서(Document)
컬럼(Column) 		필드(Field)

문서(Document)
MongoDB 데이터의 기본 단위로 정렬된 필드와 연결된 값의 집합으로 이루어진 것

문서의 특성
동일한 필드(Field) 명이 필요하지 않음
동일한 필드(Field) 명일지라도 자료형이 동일하지 않아도 됨
JavaScript의 JSON 객체와 유사함

MongoDB의 간단한 예 다중 필드와 값을 쌍으로 가짐
{       필드Field : 값Value
	name : "test", 
	age : 25
	}

콜렉션(Collection)
문서(Document)들의 모음

콜렉션의 특성

동적 스키마를 가짐 -> 하나의 콜렉션 내 문서들이 모두 다른 구조를 가질 수 있다는 것을 의미함
예
{ name : “test”, age : 25 }
{ number : [ 1, 2, 3 ] }

콜렉션(Collection)은 이름으로 식별이 가능함

콜렉션(Collection) 이름 생성 규칙
1 _ 또는 문자로 시작
2 $ 또는 \0(Null)을 포함할 수 없음
3 빈 문자열(“ ”)은 사용할 수 없음
4 system. 으로 시작할 수 없음

데이터베이스(Database)
하나 이상의 콜렉션(Collection)을 포함 

데이터베이스(Database)의 특성
각각의 데이터베이스(Database)는 자체 권한을 가지며, 분리된 파일로 저장
이름으로 식별

데이터베이스(Database) 이름 생성 규칙
1 빈 문자열은 사용할 수 없음
2 Windows에서는 특정 문자열( / \ . “ $ * < > : | ? )을 포함할 수 없음
3 Linux, Unix에서는 특정 문자열( / \ . “ $ )을 포함할 수 없음

몽고db 설치
MongoDB 다운로드 페이지 우측상단
운영체제에 적합한 설치 파일 다운 
윈도우 버전에 따른 유의사항
1 윈도 xp 지원안함
2 경우에 따라 메모리 관련 패치 진행
인스톨 진행
설치 확인 C드라이브 program files 몬고폴더 내에 
MongoDB 주요실행파일
mongod : MongoDB의 서버
mongo : MongoDB 의 클라이언트

MongoDB 실행실습
기본데이터 폴더 디렉 MongoDB 를 설치한 드라이브의 \data\db 생성
cmd 실행
cd \
cd pro tab 으로 자동완성 programfile
dir 해당 경로 폴더 내 파일 확인
cd MongoDB
cd Server
cd 3.4
cd bin
mongod 몬고db서버실행
서버 종료 ctrl c
쉬운 실행을 위해 MongoDB 실행 파일 경로를 Windows 환경변수 Path 에 등록
mongo 실행 파일 속성 경로 복붙
내컴퓨터 우클릭 속성 고급시스템설정
환경변수
Path 편집 
변수값 마지막에 ; 복붙 확인
경로 이동 없이도 mongod 실행 가능

2. MongoDB 실행
mongod의 주요 옵션
1 mongod 제공 옵션 확인 : --help 
예 mongod --help 
2 기본 데이터 폴더(\data\db) 변경 : --dbpath
예 mongod --dbpath d:\data\db (이때, 변경하고자 하는 데이터 폴더가 반드시 먼저 생성되어 있어야 함)
3 기본 서버 연결 포트(27017) 변경 : --port
예 mongod --port 27023
4 출력을 명령창이 아닌 지정한 파일로 출력 : --logpath
예 mongod --logpath d:\data\logs
5 로그 기록이 존재하는 파일에 새로운 내용을 추가 : --logappend
예 mongod --logpath d:\data\logs --logappend

MongoDB서버에 접속하기 위해서는 클라이언트인 MongoDB 셸(Shell)을 실행시켜야함

실행 실습
cmd 실행
mongo 로 서버 접속
데이터베이스 (Database) 생성 : use 데이터베이스명
use test_db
콜렉션 Collection 생성 : db.createCollection("콜렉션 명")
db.createCollection("users")
콜렉션 목록 확인
show collections
문서 Document 추가 : db.콜렉션명.insert(문서)
db.users.insert( {name : "doc1"} )
db.users.insert( {name : "doc2", age:34} )
삽입한 문서 확인 : db.콜렉션명.find()
MongoDB 셸에서 서버종료 
use admin 관리자 권한 획득-> db.shutdownServer()



3. MongoDB 문서 생성
데이터베이스와 콜렉션을 생성한 후, 문서를 추가하고
find 함수를 이용하여 추가한 문서를 확인했을 때 출력화면

_id 필드(Field)
1 콜렉션(Collection)에서 모든 문서가 고유하게 구분될 수 있도록 함

2 모든 문서는 _id 필드(Field)를 가져야 함
만약, 문서(Document) 추가 시, _id 필드를 명시하지 않을 경우 자동으로 생성
문서의 첫 번째 필드(Field)에 위치

ObjectId
_id 필드의 기본 데이터형으로써, 12 byte로 구성되며 각 byte마다 2자리 사용
타임스탬프 장비 식별자 	프로세스 ID 	카운터
4 byte	   3 byte 	2 byte 		3 byte



