
사이트 뼈대 구성하기

학습내용
▪ MTV 패턴
▪ URL 연동
▪ 정규 표현식

학습목표
▪ MTV 패턴에 대해 설명할 수 있다.
▪ Django Framework의 URL 연동 방식에 대해 파악할 수 있다.
▪ URL 연동을 위한 정규 표현식에 대해 설명할 수 있다.


MTV 패턴

1 MTV 패턴이란?

◈ 1 MTV(Model-Template-View) 패턴
▪ Model		데이터
▪ Template	사용자에게 보여지는 화면
▪ View		URL에 대한 처리 후 결과를 Template에게 전달

◈ 2 MVC(Model-View-Controller) 패턴과의 비교
	1 MVC 패턴과 거의 동일
	2 MVC 패턴의 Controller 역할을 MTV에서는 View가 담당
	3 MVC 패턴의 View 역할을 MTV에서는 Template이 담당

2 Django의 MTV 구성

◈ 1 URLConf
클라이언트의 요청을 받는 곳
urls.py 파일에 URL패턴 맵핑 구성
URL패턴 맵핑에 따라 적절한 View 선택
	from django.conf.urls import include, url
	from django.contrib import admin
	urlpatterns = [
		url(r'^polls/$', views.index, name=‘index’),
		url(r'^admin/', admin.site.urls),
	]

◈ 2 View
1 URL에 따른 처리를 실제로 수행하는 곳
2 views.py에 요청에 대한 처리 및 응답을 구현
3 파라미터들에 따라 데이터를 가져오며 템플릿을 로드하고 템플릿을 가져온 데이터로 렌더링
	from django.shortcuts import render
	
	from .models import Article
	def year_archive(request, year):
		a_list = Article.objects.filter(pub_date__year=year)
		context = {'year': year, 'article_list': a_list}
		return render(request, 'news/year_archive.html', context)

◈ 3 Model
	사용 데이터에 대한 정의를 담고 있는 클래스
	데이터를 하나의 클래스로 정의
	하나의 클래스는 데이터베이스의 하나의 테이블에 맵핑

	from django.db import models
	
	class Question(models.Model):
	question_text = models.CharField(max_length=200)
	pub_date = models.DateTimeField('date published')
	
	class Choice(models.Model):
	question = models.ForeignKey(Question, on_delete=models.CASCADE)
	choice_text = models.CharField(max_length=200)
	votes = models.IntegerField(default=0)

◈ 4 Template

.html파일을 통해 화면에 보여줄 내용을 구현

템플릿 엔진을 통해 특정 템플릿 코드 재사용 가능

<h1>{{ question.question_text }}</h1>
<ul>
	{% for choice in question.choice_set.all %}
	<li>{{ choice.choice_text }}</li>
	{% endfor %}
</ul>


URL 연동

◈ 1 View 작성

▷ View 작성
1 views.py에 URL에 대한 처리를 수행할 함수 작성
2 해당 함수에서 처리 후 응답 코드 작성

	from django.http import HttpResponse
	def index(request):
		return HttpResponse("Hello, world. You're at the polls index.")

3 Html 파일을 응답으로 처리할 경우는 ‘프로젝트폴더/어플리케이션폴더/templates/어플리케이션명’ 폴더에 html 파일 생성
4 render함수로 html파일과 context(Model 변수)를 렌더링

from django.http import HttpResponse
from django.shortcuts import render
from Django.template import loader

def index(request):
	context = {'word': 'World!'}
	return render(request, 'polls/index.html', context)
	
<html>
	<head>
		<title>Django</title>
	</head>
	<body>
		Hello, {{word}}
	</body>
</html>

◈ 2 urls.py 설정

▷ 1 URL함수
1 URL함수는 URL과 View의 관계를 맵핑하는 역할을 함
2 URL함수의 파라미터는 다음과 같음
	URL(regex, view, kwargs=None, name=None, prefix=‘’)

• regex		URL을 정규 표현식으로 표현
• view		URL에 대한 요청을 처리할 View 지정
• kwargs	Regex를 통해 전달되는 파라미터 외에 자체적으로 추가 파라미터 지정
• name		URL에 대한 이름 설정
• prefix	View 함수에 대한 접두사

3 아래의 코드는 r’^$’과 같은 정규 표현식 URL패턴에 대해 views.py의 index 함수를
호출하고, 이 URL패턴의 이름을 ‘index’라고 정의한 예

from django.conf.urls import include, url
from django.contrib import admin
from polls import views

urlpatterns = [
	url(r'^$', views.index, name='index'),
	url(r'^admin/', admin.site.urls),
]


▷ 2 URL모듈화
- 어플리케이션에 따라 urls.py를 따로 구현할 수 있음
- mysite/urls.py와 mysite/polls/urls.py와 같이 구현할 경우 include 함수를 이용하여 URL구성을 불러올 수 있음
- 이 때, polls/와 같은 URL의 경우 mysite/polls/urls.py를 참조

mysite/urls.py
from django.conf.urls import include, url
from django.contrib import admin
from polls import views
urlpatterns = [
url(r'^polls/', include('polls.urls',
namespace="polls")),
url(r'^admin/', include(admin.site.urls)),
]


mysite/polls/urls.py 
from django.conf.urls import include, url
from django.contrib import admin
from polls import views
urlpatterns = [
url(r'^$', views.index, name='index'),
]


정규 표현식
1 URL 패턴에 사용되는 정규 표현식

▷ 정규 표현식 기본 규칙
	r로 시작하여 정규 표현식임을 나타냄

	^(시작)과 $(끝)을 사용하여 일치하는 패턴을 찾음

메타문자 기능 설명

[^ ] 부정
	▪ 문자 클래스 안의 문자를 제외한 나머지를 선택
	▪ 예 : [^abc]d는 ad, bd, cd는 포함하지 않고 ed, fd 등을 포함
	▪ [^a-z]는 알파벳 소문자로 시작하지 않는 모든 문자를 의미

^ 처음 
	▪ 문자열이나 행의 처음을 의미

$ 끝 
	▪ 문자열이나 행의 끝을 의미

( ) 하위식 
	▪ 여러 식을 하나로 묶을 수 있음
	▪ "abc¦adc"와 "a(b¦d)c"는 같은 의미를 가짐
	
＼n 일치하는 n번째 패턴
	▪ 일치하는 패턴들 중 n번째를 선택하며, 여기에서 n은 1에서 9 중 하나가 올 수 있음

* 0회 이상 
	▪ 0개 이상의 문자를 포함하며, "a*b"는 "b", "ab", "aab", "aaab"를 포함함

{m, n} m회 이상 n회 이하
▪ "a{1,3}b"는 "ab", "aab", "aaab"를 포함하지만, "b"나 "aaaab"는 포함하지 않음 ? 0 또는 1회 
▪ "a?b"는 "b", "ab"를 포함

+ 1회 이상 
▪ "a+b"는 "ab", "aab", "aaab"를 포함하지만 "b"는 포함하지 않음

¦ 선택
▪ 여러 식 중에서 하나를 선택
▪ 예 : "abc¦adc"는 abc와 adc 문자열을 모두 포함


1 자주 쓰이는 패턴 예제

▷ 1 r^polls/(?P<question_id>\d+)/results$’
polls/3/results와 같은 형식

(?P): 이 영역의 문자열에 정규 표현식을 적용

\d+ : \d+ 패턴에 부합된다면 <question_id> : question_id라는 변수명으로 인자를 넘김

▷ 2 r^polls/detail/(\d{3})/$’
polls/detail/123 과 같이 적용

\d{3}은 세 자리 숫자를 나타냄

▷ 3 r^polls/[a-z] $’
polls/abc와 같이 적용

[a-z]는 a에서 z까지의 임의의 문자, 즉 영문 소문자 한 개를 나타냄


학습정리
1. MTV 패턴
• MTV(Model-Template-View) 패턴이란?
- Model은 데이터
- Template은 사용자에게 보이는 화면
- View는 URL에 대한 처리 후 결과를 Template에게 전달

• Django에서의 MTV 구성
- URLConf : 클라이언트의 요청을 받는 곳
- View : URL에 따른 처리를 실제로 수행하는 곳
- Model : 사용 데이터에 대한 정의를 담고 있는 클래스
- Template : .html 파일을 통해 화면에 보여줄 내용을 구현

2. URL 연동
• View 작성
- views.py에 URL에 대한 처리를 수행할 함수 작성
- 해당 함수에서 처리 후 응답 코드 작성
- Html 파일을 응답으로 처리할 경우는 ‘프로젝트폴더/어플리케이션폴더/templates/어플리케이션명’ 폴더에 Html 파일 생성
- Render 함수로 Html 파일과 Context(model 변수)를 렌더링

• urls.py 설정
- URL 함수 : URL 함수는 URL과 View의 관계를 맵핑하는 역할을 함
- 어플리케이션에 따라 urls.py를 따로 구현할 수 있음
- url 모듈화 : 어플리케이션에 따라 urls.py를 따로 구현할 수 있음
- mysite/urls.py와 mysite/polls/urls.py와 같이 구현할 경우 include 함수를 이용하여 url 구성을 불러올 수 있음


3. 정규 표현식
• URL패턴에 사용되는 정규 표현식
- r로 시작하여 정규 표현식임을 나타냄
- ^(시작)과 $(끝)을 사용하여 일치하는 패턴을 찾음

• 자주 쓰이는 패턴 예제
- r^polls/(?P<question_id>\d+)/results$’
- r^polls/detail/(\d{3})/$’
- r^polls/[a-z] $