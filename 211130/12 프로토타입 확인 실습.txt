프로토타입 확인 실습

최근 IT 업계 프로토타입

UX 로 검증

1차원적 프로토타입을 넘어 결과물에 근접한 프로토타입 또는 프로토 타이핑이 가능한 툴 응용

학습목표
▷ 작성된 프로토타입을 공유하는 방법과 이를 확인하는 방법을 이해하고 설명할 수 있다.
▷ 프로토타이핑툴을 이용하여 프로토타입을 공유하고 이를 피드백 할 수 있다.

학습내용
▷ 프로토타입 확인
▷ 프로토타입 피드백

프로토타입 확인

1. 프로토타입의 필요성
1) 프로토타입과 프로토타이핑

! 프로토타입 란?
▷ 원래의 형태 또는 전형적인 예, 기초 또는 표준
▷ 시제품이 나오기 전에 제품의 원형

! 프로토타이핑 란?
▷ 개발자들과 사용자들의 의사소통 상의 효과를 증진하기 위한 시스템 개발 기법
▷ 제품의 구체적인 형태를 디자인하는 작업
▷ 개발자와 사용자 간의 상호이해 및 지식 교환을 위한 작업

2) 프로토타이핑 과정
1단계
▷ 사용자 요구사항 분석을 위해 시스템 설계자와 사용자 간에 함께 작업

2단계
▷ 요구사항을 만족하는 4세대 언어(4GL: Forth Generation Language)
▷ CASE 도구를 이용하여 개발 (앞으로 개발될 시스템의 가장 핵심적인 기능 위주로 개발)

3단계
▷ 사용자가 프로토타입 사용 및 요구사항 확인, 여러 가지 보완점 제안

4단계
▷ 프로토 타입의 수정과 보완 작업 → 수정 후, 3단계~4단계 반복

3) 장단점
장점
▷ 사용자 중심 개발방법으로 최종 사용자의 요구 극대화 가능
▷ 개발 시간 단축
▷ 초기 오류 발견으로 변경 용이

단점
▷ 시스템의 문서로 만드는 과정이 지나치게 축소될 가능성
→ 추후 유지보수의 불필요한 노력 발생
▷ 최종적으로 수정 및 변경 발생 시 개발 시간 소요와 비용 발생
▷ 전체 품질과 장기적인 유지보수 어려움

4) 목적과 필요성
요구분석의 어려움 해결
요구사항에 대해 사용자와 커뮤니케이션 수단
사용자와 의사소통 및 개발 타당성 검토
서비스의 플로우 또는 구조 점검

▷ 사용자의 참여 유도

2. 프로토타입의 종류

콘셉트를 신속하게 표현
▷ 시각적 구현의 충실도 ↓, 기능적 구현의 충실도↑
▷ 콘셉트, 아이디어를 신속하게 외형적으로 표현 가능
▷ 기능적인 문제점 발견 및 업무 흐름에 관련된 문제점을 찾을 때 유용
▷ 프로토타입의 품질이 낮기 때문에 UX 콘셉트, 아이디어의 방향성 점검 시 사용

인터랙션, 기능 위주
▷ 시각적 구현의 충실도 ↓, 기능적 구현의 충실도↑
▷ 각각의 인터랙션, 기능에 대한 점검이 목적
▷ 제품의 기능적인 요구수준 파악 가능
▷ 특정 기능을 깊이 다루거나 여러 개의 화면을 연속해서 프로토타이핑
▷ 기술적 구현 충실도까지 고려하는 경우 有

디자인, 사용성 위주
▷ 시각적 구현의 충실도 ↑, 기능적 구현의 충실도 ↓
▷ 비주얼 디자인까지 입힌 다음 사용성을 점검하는 목적
▷ 콘텐츠를 실제와 유사하게 반영
▷ 개별 화면 단위로 제작
▷ 감성적인 만족도 체크와 깊은 연관 有

높은 품질의 프로토타입
▷ 시각적 구현의 충실도↑ , 기능적 구현의 충실도↑
▷ 신제품 개발 시 사용자 반응을 점검하는 목적
▷ 프로토타입을 통한 사용자 테스트가 프로젝트에서 큰 비중을 차지
▷ 기술, 콘텐츠도 깊이 있게 반영되며 많은 이해관계자의 참여
▷ 사용자 테스트와 깊은 연관 有

2) 충실도에 따른 방법

저수준 프로토타이핑 (Low-fidelity prototyping)
▷ 빠른 시간 안에 프로토타이핑이 필요한 경우 사용
▷ 작은 공간과 적은 시간을 들여 구현 가능

! 저수준 프로토타이핑 (Low-fidelity prototyping) 의 종류?
스케치		페이퍼 프로토타입	 	Wireframe

스케치
▷ 비교적 간단한 형태로 아이디어를 표현
▷ 다른 사람들과 브레인스토밍 하는 재료로 활용
▷ 페이퍼 프로토타이핑을 위한 전 단계이거나 페이퍼 프로토타이핑 자체가 되는 경우

페이퍼 프로토타입
▷ 종이로 해당 서비스를 간단한 게 만들어 실제 구현되는 것처럼 테스트하는 방법
▷ 제작의 간단함, 빠른 속도, 수정의 용이
▷ 언제 어디서든 할 수 있고, 협업 작업이 쉬움
▷ 시간, 노력, 비용이 적게 듦

Wireframe
▷ 페이퍼 프로토타이핑 결과를 한 단계 더 구현 충실도가 높은 형태로 정리하는 데 적합
▷ UI 구성, 콘텐츠 배치, 내비게이션 흐름 등을 표현하는 데 활용
▷ 정적인 화면들로 구성 : 이용의 흐름과 같이 실제 사용자들이 마주치는 경험을 그대로 표현하지 못함

고수준 프로토타이핑 (High-fielity prototyping)
▷ 사용자가 직접 참여한 사용성 평가 등에서 활용
▷ 디자인의 시제품, 소프트웨어의 베타 버전 등 프로젝트의 최종 결과물과 유사도, 완성도가 높은 프로토타입 활용

디지털 프로토타입
▷ 일정 및 제작 인력의 충분, 실제 동작하는 프로토타입으로 꼭 확인해야 할 중요한 부분이 있는 경우 사용
▷ 마우스 클릭, 키보드 입력 등 인터랙션에 대한 사용자 반응을 바로 확인 가능
▷ 프로토타이핑 툴을 이용하여 사용

※ 실습 영상
https://prototypr.io/prototyping-tools/

그래픽에 따라 어느정도 활용 참조 가능

webflow googling
https://webflow.com/

핵심정리
1. 프로토타입 확인 및 피드백
•프로토타입은 시제품이 나오기 전에 제품의 원형을 의미하며 프로토타이핑은 개발자들과 사용자들의 의사소통 
상의 효과를 증진시키기 위한 시스템 개발 기법

•프로토타이핑 과정은 가장 먼저 사용자의 요구분석 후 4세대 언어 또는 CASE도구를 이용하여 개발하며 사용자가 
프로토타입을 사용하여 요구사항을 확인 및 보안 점을 제안하면 프로토타입을 수정작업을 진행함

•사용자 중심 개발방법으로 최종 사용자의 요구를 극대화할 수 있으며 개발 시간을 단축 시킬 수 있는 장점을 가짐

•시스템의 문서로 만드는 과정이 지나치게 축소화되어 전체 품질과 장기적인 유지보수가 어려워질 수도 있는 단점이 있음

•프로토타입을 이용하여 사용자와 의사소통 도구로 사용하기도 하며 서비스의 플로우 또는 구조를 점검을 할 수 있음

•프로토타입의 종류 : 콘셉트를 신속하게 표현, 인터랙션/ 기능 위주로 표현, 디자인/사용성 위주 표현, 높은 품질의 프로토타입

•저수준 프로토타이핑 방법으로는 스케치, 페이퍼 프로토타입, 와이어 프레임을 이용함

•고수준 프로토타이핑은 프로토타이이핑 툴을 이용하여 인터랙션과 서비스 플로우를 확인 할 수 있으며 사용자가 
직접 참여한 사용성 평가 등에서 많이 활용되는 방법

