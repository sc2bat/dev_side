리눅스 사용자 관리

프로젝트 팀 여러 명의 개발자 -> 접속 -> 서버 페도라 리눅스

문제점
여러명의 사용자에게 id와 패스워드를 부여해야함
서버에 여러명이 동시에 동일한 파일에 접근

관리가가 운영해줘야됨

관리자 사용자 관리 // 파일 및 디렉토리 관리

프로젝트 팀에 참여하는 개발자도 알아야됨

사용자 및 그룹관리 명령

파일 및 디렉토리 관리 명령

사용자 관리
1 사용자 종류
3가지
관리자 Super User
ID : root
리눅스 시스템 관리 / 모든 접근에 대한 권한 절대적 권한

시스템 내부 사용자
페도라 리눅스가 동작되는데 필요한 내부사용자
운영체제 운영에 필요한 별도의 사용자 관리 필요없음

일반 사용자
Super User 가 일반 사용자를 생성 및 관리
페도라 리눅스에 로그인하여 사용

2 슈퍼 유저의 권한
하드웨어 설치 및 관리
소프트웨어 설치 및 삭제, 업그레이드
시스템 감시 및 관리
네트워크 설정 및 테스트
일반 사용자 계정 생성 및 삭제 관리
시스템 백업

3 그룹 관리
일반 사용자는 그룹으로 묶어 관리
그룹 생성 및 삭제 권한은 superuser 한테 있음

그룹 별로 권한 부여 및 시스템 접근 제한가능

4 사용자 및 그룹 관련 파일
/etc/passwd 사용자 계정 정보 파일
/etc/shadow 사용자 암호 파일
/etc/group  그룹 파일
시스템 파일이라 수정시 로그인 안될 수도 있음

5 사용자 정보보기 명령어
whoami 로그인한 사용자 아이디 확인
who am i 로그인 정보
id 로그인한 사용자의 id 정보
groups 로그인한 사용자 그룹확인
pwd 현재 디렉토리확인


그룹 및 사용자 관리
1 그룹 관리
그룹생성 : groupadd 그룹이름
# groupadd aaa 그룹 이름만 지정하면 그룹 번호가 자동으로 할당
groupadd -g 그룹번호
-g 옵션으로 그룹번호 지정 기존사용번호가 아니면 모두 가능

2 그룹 삭제
# groupdel 그룹이름

3 그룹 지정
# usermod
ex) # usermod -g staff test test 사용자의 그룹을 staff 그룹으로
# usermod -G 주그룹, 부그룹 사용자

2 사용자 관리
사용자 아이디 생성 useradd
# useradd 사용자ID
동일한 이름의 그룹도 자동생성 생성 뒤 암호를 지정해야함
# passwd 암호

ex) # useradd -d /home/choi -u 1500 -m -s /bin/bash -g staff -G shon choi
-d 홈 디렉토리 지정 -u 사용자번호지정 -m 기본설정파일적용 -s shell지정 -g 주그룹지정 -G 부그룹지정
# passwd 암호 암호를 생성하여 마무리
사용자 삭제
# userdel shon 만하면 사용자의 홈디렉은 남아있음
# rm - r /home/shon 로 사용자의 홈디렉 삭제
하면 삭제 여부를 물어보는데 y로 쭉 입력해주면 삭제됨

4 su (Substitute User)명령
$ su 일반사용자가 슈퍼유저로 전환할때 
root 사용자의 암호 입력해야함
전환해도 환경은 일반 유저 환경임
$ su -
슈퍼유저인 root 사용자 환경으로 전환됨
root 로 로그인한 경우도 동일함
$ su [일반사용자ID]
super user 가 일반 사용자로 전환
환경은 superuser 환경임

#su - [일반사용자ID]
일반 사용자 환경에서 로그인한 것과 동일하게 전환됨


파일 및 디렉토리 관리
1 파일의 개요
파일의 형태
윈도우 파일명의 확장자로 속성 결정 대소문자 구분없이 사용
페도라 파일의 정보로 파일의 종류 결정 대소문자 구분
파일의 종류 텍스트파이 ASCII 파일, 디렉토리(Directory), 링크 파일, 시스템파일(바이너리, 문자, 파이프, 장치)

2 디렉토리 개요
윈도우 운영체제와 동일한 계층적 구조
/ : root 디렉토리 

3 디렉토리 용어
root Directory 최상위 디렉, / 로 표현
current Working Directory 현재 작업디렉토리 쉘프롬프트에 표시, . 으로 표현
절대 패스 Absoulte Path 루트 디렉 기준으로 표현하는 방식 ( /home/shon)
상대 패스 Relative Path 현재 작업디렉 기준으로 표현 ( ../home/shon    ./home/shon)
상위 디렉 계층 구조상 현재 작업 디렉의 위쪽 디렉 .. 로 표현
홈 디렉 Home Directory 사용자의 기본 디렉토리로 로그인 시 현재 작업 디렉가 홈 디렉임 ~ 로표현

4 파일 종류
기호로 구분
- 텍스트 파일 ASCII 파일
d 디렉토리
l 링크 파일
c 문자형 입출력파일
b 바이너리파일
p 파이프파일
-, d, l  이 셋이 가장많이 사용됨

파일 및 디렉토리 관련 명령어 
1 기본 명령어
ls 현재 디렉 파일 목록 출력
# ls -l(옵션 자세히보기)
d rwxr- xr- x. 3 root root 4096 5월 3 12:23 eclipse
d 파일종류 rwxr- xr- x. 파일 접근 권한 3 파일 링크 갯수 첫 root 파일에 대한 소유자 id root_2 파일이 속해져있는 그룹명
4096 파일 사이즈 날짜 파일에 마지막으로 접근한 날짜
cd 현재 작업 디렉토리를 변경하는 명령 
pwd 현재 작업 디렉토리를 절대 패스로 화면에 출력
mkdir 디렉토리생성 # mkdir test
redir 디렉토리 삭제 (디렉토리 내에 파일이 없어야 실행됨) # rm -r test 한번에 삭제가능
cp 파일 복사 # cp hello.c test // hello.c 파일을 test 디렉으로  # cp hello.c test/h.c 하면 이름변경하여 복사
rm 파일삭제 ( 옵션 -r 은 디렉토리 삭제)
mv 파일 이동 # cp hello test
cat 파일의 내용을 화면에 출력

3 파일 접근권한
r 읽기 w 쓰기 x 실행 -권한없음
d rwxr- xr- x. 3 root root 4096 5월 3 12:23 eclipse
첫3개 소유자 그다음3개 소유그룹 그다음 3개 기타 사용자

접근 권한 변경 명령
#chmod 654 test
r w - | r  - x  | r - -
1 1 0 | 1 0 1 | 1 0 0
   6       5        4

이진수를 10진수로 변경하여 옵션을 주면 변경됨

4 파일의 소유자와 소유 그룹변경
소유자변경명령
소유자 chown
소유그룹 chgrp

5 파일 링크 Link
두개의 파일을 연결하여 놓고 두개의 파일을 마치 하나의 파일처럼 사용
명령어 In
하드 링크 Hard Link
두 개의 파일 물리적으로 연결 두개의 파일이 별도로 저장공간을 차지함
# In file1 file2
심볼릭 링크 Symbolic Link 
두개의 파일 심볼로 연결 두개의 파일이 하나의 저장공간을 사용
# In - s file1 file2




































