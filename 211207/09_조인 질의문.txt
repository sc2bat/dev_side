복수의 테이블을 연관지어 검색

한번에 여러 테이블을 검색

조인 질의문

학습내용
▷ 조인
▷ 다양한 조인 구문

학습목표
▷ 조인을 사용하여 두 개 이상의 테이블로부터 데이터를 조회하는 SQL문을 작성할 수 있다.
▷ 조인을 표현하는 다양한 SQL 문법을 설명할 수 있다.

조인
1. 조인의 개념

◈ 조인
▷ 하나의 SQL 질의문에 의해서 여러 테이블에 저장된 데이터를 한번에 조회할 수 있는 기능
▷ 두 개 이상의 테이블을 ‘결합’ 한다는 의미

◈ 조인의 필요성
	하나의 SQL 질의문이 하나의 테이블만 검색할 수 있다고 하는 경우
	
Q 사번이 103인 사원의 부서명을 알고 싶을 때
① 사번이 103번인 사원의 부서 번호를 파악함
② 해당 부서 번호와 같은 부서 번호를 가지고 부서명을 부서테이블에서 검색함
⇨ 매우 불편함

2. 간단한 조인

◈ SQL에서 간단한 조인 표기법

① FROM 절에 조인에 참여하는 두 테이블을 기록함
  - 콤마(,)로 구분함
② WHERE 절에 조인 조건을 기술함

Q 사번이 103인 사원의 부서명을 알고 싶을 때
  - 사원 정보 : EMPLOYEE
  - 부서 정보 : DEPARTMENT
  - 조인 조건

◈ 조인문 작성 시 유의 사항

▷ 컬럼 이름의 모호성
  - 서로 다른 두 테이블의 컬럼(속성) 명이 같을 경우
	예 DNO = DNO
	⇨ DBMS에서 어느 속성이 어느 테이블에 있는 것인지 알 수 없어짐
  - 해결방법
	• 컬럼 이름 앞에 테이블 이름을 접두사로 사용함
	• 테이블 이름과 컬럼 이름은 점(.)으로 구분함
	예 DEPARTMENT.DNO = EMPLOYEE.DNO
	
▷ 테이블 별명
  - 테이블의 이름이 긴 경우 SQL문 작성이 힘듦
	• 테이블 이름 대신 별명 사용이 가능함
	• FROM 절에 테이블 이름 다음에 공백을 두고 별명을 정의함
	
▷ 별명 작성 규칙
① 별명은 최대 30자까지 가능함
② 하나의 SQL에서 테이블 이름과 별명을 혼용해서 쓸 수 없음
③ 테이블의 별명은 해당 SQL문에서만 유효함

Q 사번이 103인 사원의 부서명을 알고 싶을 때(별명 사용)


다양한 조인 구문

1. 다양한 조인들

◈ 카티샨 프로덕트(Cartesian Product : X)
▷ 두 테이블에 속한 튜플들의 모든 가능한 쌍을 생성함
▷ 일반적인 방법
  - FROM 절에 두 개 이상의 테이블명을 기록함
  - WHERE 절에는 조인 조건을 기술하지 아니함
	예 SELECT * FROM EMPLOYEE, DEPARTMENT

◈ 동등 조인
	조인 조건이 “=” 인 경우
  - 조인 조건으로 일반적으로 “=”을 많이 씀

◈ 자연 조인
	조인 조건을 명시하지 않고 조인한다고 할 때
	두 테이블에 공통으로 나타나는 속성의 동등 조인으로 생각함
  - 동등 조인과 질의 결과의 구조(스키마)가 똑같지는 않음
  
▷ MS-SQL
  - 자연 조인을 명시적으로 지원하지는 않음
  
▷ Oracle
  - 자연 조인을 지원하며 FROM 절에 다음과 같이 씀
	FROM 테이블명 NATURAL JOIN 테이블명
	⇨ WHERE 절에 조인 조건을 쓰지 않음
	
◈ 쎄타 조인
	조인 조건으로 <, >, <=, >=, != 등을 쓸 수 있음
  - 일반적인 조인 조건에 대하여 쎄타 조인이라고 함
예 다른 사원의 봉급 보다 많은 봉급을 받는 사원들의 이름 찾기

▷ 쎄타 조인의 예

Q SALGRADE 테이블에서 각 봉급의 하한과 상한에 따른 등급(Grade)이 정해져 있음

Q 각 사원의 급여에 따라서 SALGRADE를 참조하여 사원의 등급 출력
  - 조인 조건
	lowsal <= salary and salary <= highsal
  - SALGRADE의 lowsal과 highsal은 상한과 하한임
  - between 연산자로 변환할 수 있음

◈ 셀프 조인
	하나의 테이블 내에 있는 컬럼끼리 연관시켜 조인이 필요한 경우

Q 각 사원의 이름과 그 사원의 관리자 이름 검색
  - 사원 이름 : EMPLOYEE.NAME
  - 각 사원의 관리자 번호 : EMPLOYEE.MANAGER
  - 관리자 이름 : EMPLOYEE.NAME
  - 사원의 관리자 또한 사원임
▷ 조인 대상 테이블이 두 개 인데 동일한 테이블임
  - 물리적으로 1개임
  - 논리적으로 서로 다른 테이블이라고 생각하면 됨
	⇨ 이외에는 다른 조인과 똑같음
▷ 어떻게 서로 다른 테이블이라고 SQL로 할까?
  - 별명을 이용함

◈ 다중 조인
▷ 조인 질의의 경우
  - 조인에 참여하는 테이블이 2개 ⇨ 보통 ‘2중 조인’(2-way join)이라고 함
  
▷ 다중 조인(m-way join)
  - 경우에 따라서 여러 테이블들 간의 조인이 필요한 경우도 있음
  
Q 쎄타 조인의 예제를 확장하여 각 사원별 이름, 급여 등급, 그리고 부서명 검색
  - 사원 테이블의 부서 번호를 통해 부서 테이블을 참조하여 부서명을 가지고 와야 함
  - 사원 테이블의 급여로부터 급여등급 테이블의 등급을 가지고 와야 함
⇨ 3개의 테이블을 조인해야 함(3중 조인)
  - 이름 : employee 테이블
  - 급여등급 : salgrade 테이블
  - 부서명 : department 테이블
  - 조인조건
	employee와 salgrade
	salary between lowsal and highsal
	employee와 department
	dno = dno
	
Q 사원별 이름, 급여등급, 부서명 출력

◈ ANSI 조인
	SQL을 표준화할 때 만든 ANSI 표준 문법
▷ 기존 SQL과 차이점
  - 조인 조건을 WHERE로 표현하지 않고 FROM 절에 표현함
  
▷ ANSI 조인의 종류
  - CROSS JOIN
  - INNER JOIN
  - OUTER JOIN
	⇨ T-SQL 문법과 다소 상이해서 지원되지 않는 부분도 있음
	
▷ 크로스 조인(Cross Join)
  - 카티샨 프로덕트(Cartesian Product)의 다른 표현 법
FROM 테이블명 CROSS JOIN 테이블명

▷ 내부 조인(Inner Join)
  - 일반적인 조건의 Ansi 조인 표기법
FROM 테이블명 INNER JOIN 테이블명 ON 조인조건
FROM 테이블명 JOIN 테이블명 ON 조인조건

◈ 외부 조인
▷ 일반적인 조인은 조인 조건을 만족하는 튜플들만이 조인 결과에 나옴
⇨ 정보의 손실
▷ 조인 조건을 만족하지 않는 튜플들도 결과로 보고 싶은 경우
⇨ 조인에 참여하는 테이블에 속한 모든 튜플을 출력함
▷ ANSI 조인 표기법 : 명시적 표기법
  - LEFT OUTER JOIN : 왼쪽 테이블에 있는 튜플들은 다 나옴
  - RIGHT OUTER JOIN : 오른쪽 테이블에 있는 튜플들은 다 나옴
  - FULL OUTER JOIN : 양쪽 테이블에 있는 튜플들은 다 나옴
Q 각 사원의 이름과 그 사원의 관리자 이름 검색
  - 관리자가 없는 사원들도 질의 결과에 포함되어야 함

핵심요약
1. 조인
◈ 조인의 개념
▷ 하나의 SQL 질의문에 의해서 여러 테이블에 저장된 데이터를 한번에 조회할 수 있는 기능
▷ 두 개 이상의 테이블을 ‘결합’ 한다는 의미
▷ 조인의 필요성
  - 하나의 SQL 질의문이 하나의 테이블만 검색할 수 있다고 하면 너무 불편함
  
◈ 간단한 조인
▷ SQL 에서 간단한 조인 표기법
  - FROM 절에 조인에 참여하는 두 테이블을 기록함
  - WHERE 절에 조인 조건을 기술함
▷ 조인문 작성 시 유의 사항
① 컬럼 이름의 모호성
  - 컬럼 이름 앞에 테이블 이름을 접두사로 사용함
  - 테이블 이름과 컬럼 이름은 점(.)으로 구분함
② 테이블의 이름이 긴 경우 테이블 이름 대신 별명 사용 가능
  - 하나의 SQL에서 테이블 이름과 별명을 혼용해서 쓸 수 없음

2. 다양한 조인 구문
◈ 다양한 조인들
▷ 카티샨 프로덕트(Cartesian Product)
- 두 테이블에 속한 튜플들의 모든 가능한 쌍을 생성함
- FROM 절에 두 개 이상의 테이블명을 기록
- WHERE 절에는 조인 조건을 기술하지 아니함

▷ 동등 조인
- 조인 조건이 “=“ 인 경우

▷ 자연 조인
- 조인 조건을 명시 하지 않고 조인한다고 할 때 두 테이블에 공통으로 나타나는 속성의 동등조인으로 생각
- MS-SQL에서는 자연 조인을 명시적으로 지원하지는 않음

▷ 쎄타 조인
- 조인 조건으로 <, >, <=, >=, != 등을 쓸 수 있음
- 일반적인 조인 조건에 대하여 쎄타 조인이라고 함

▷ 셀프 조인
- 하나의 테이블 내에 있는 컬럼끼리 연관시켜 조인이 필요한 경우
- 조인 대상 테이블이 두 개 인데 동일한 테이블임
- 물리적으로 1개이나 논리적으로 서로 다른 테이블이라고 생각하면 됨

▷ 다중 조인
- 조인 질의의 경우 조인에 참여하는 테이블이 2개로 이를 보통 ‘2중 조인’(2-way join)이라고 함
- 경우에 따라서 여러 테이블들 간의 조인이 필요한 경우도 있음

▷ ANSI 조인
- SQL을 표준화할 때 만든 ANSI 표준 문법
- 기존 SQL과 차이점은 조인 조건을 WHERE로 표현하지 않고 FROM 절에 표현함
- 크로스 조인(Cross Join) : 카티샨 프로덕트(Cartesian Product)의 다른 표현 법
	FROM 테이블명 CROSS JOIN 테이블명
- 내부 조인 (Inner Join) : 일반적인 조건의 Ansi 조인 표기법
	FROM 테이블명 INNER JOIN 테이블명 ON 조인조건
	FROM 테이블명 JOIN 테이블명 ON 조인조건

- 외부 조인
ㅁ 일반적인 조인은 조인 조건을 만족하는 튜플들만이 조인 결과에 나옴
ㅁ 조인 조건을 만족하지 않는 튜플들도 결과로 보고 싶을 경우 : 조인에 참여하는 테이블에 속한 모든 튜플 출력
ㅁ ANSI 조인 표기법 : 명시적 표기법
① LEFT OUTER JOIN : 왼쪽 테이블에 있는 튜플들은 다 나옴
② RIGHT OUTER JOIN : 오른쪽 테이블에 있는 튜플들은 다 나옴
③ FULL OUTER JOIN : 양쪽 테이블에 있는 튜플들은 다 나옴
