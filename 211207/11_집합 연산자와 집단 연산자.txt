
집합 연산자와 집단 연산자

학습내용
▷ 집합 연산자
▷ 집단 연산자

학습목표
▷ 집합 연산자를 이용하여 질의문을 작성할 수 있다.
▷ 집단 함수와 집단 연산자를 이용하여 다양한 통계정보를 추출할 수 있다.

집합 연산자

1. 집합 연산자

◈ 집합 연산자
▷ 테이블을 구성하는 튜플 집합에 대한 테이블의 부분 집합을 결과로 반환하는 연산자
▷ UNION : 합집합
▷ INTERSECT : 교집합
▷ EXCEPT : 차집합(Oracle에선 MINUS로 사용)
◈ UNION의 예 
Q 부서 번호 10인 사원들과 직급이 staff인 사원들 검색

◈ INTERSECT의 예
Q 부서 번호 10이고 직급이 staff인 사원들 검색

◈ EXCEPT의 예
Q 부서 번호 10인 사원들 중 직급이 staff인 사원들 검색

2. UNION과 UNION ALL

	집합 연산자를 대상 테이블을 집합으로 봄
	
  - 따라서 결과도 집합임 ⇨ 중복을 허용하지 않음
				↓
			UNION ALL을 사용

◈ UNION ALL의 사용
Q 부서 번호 10인 사원들과 직급이 staff인 사원들 검색(중복 허용)

3. 외부 합집합

◈ 합병 호환성
∪, ∩, - 연산의 피연산자(릴레이션)들이 지켜야 할 제약 조건
  - 차수(Degree : 속성의 수)가 같아야 함
  - 대응되는 속성 쌍 별로 타입(또는 도메인)이 같아야 함
  - 대응되는 속성 쌍 별로 의미(Semantic)가 같아야 함
	
◈ 합병 호환성의 불일치
	두 질의 결과가 합병 호환성을 만족하지 않음
	합집합하고 싶은 경우
			↓
		외부 합집합(U+)
◈ SQL에서의 외부 합집합
▷ 두 질의 결과의 속성 수와 타입이 일치되게 만듦
▷ NULL은 모든 속성에서 사용할 수 있는 속성값임
⇨ 이를 이용하여 강제로 동일한 구조가 되게 함

▷ 외부 합집합의 예
  - 두 질의 결과에서 공통인 속성은 dno밖에 없음
  - 다른 것들은 NULL로 출력하도록 함
⇨ 속성의 수 : 각각 4개, 타입도 일치함
⇨ 합집합 할 수 있음

1. 집단 함수

◈ 집단 함수란?
▷ 테이블의 전체 행을 하나 이상의 컬럼을 기준으로 그룹화하여 해당 그룹 별 통계 값을 출력하는 함수

Q 전체 직원의 평균 봉급을 구하기

◈ 집단 함수의 종류
▷ SUM : 그룹의 합계
▷ AVG : 그룹의 평균
▷ COUNT : 그룹의 개수
▷ MAX : 그룹의 최대값
▷ MIN : 그룹의 최소값
▷ STDEV : 그룹의 표준편차
▷ VAR : 그룹의 분산

일반적으로 집단 함수는 NULL값을 제외한 속성값들의 통계 값을 반환함 

◈ 집단 함수의 예
Q 사원의 최대 봉급, 최소 봉급 구하기

◈ 분산(VAR)
▷ 각 값이 평균과 얼마나 떨어져 있는지에 대한 통계 값
▷ 각 값과 평균의 차에 대한 차(즉, 편차)의 제곱의 평균
  - 편차는 음수이거나 양수 일수 있음으로 편차를 제곱하여 양수로 나타내고 이들의 합에 대한 평균을 구함
	(sumi=1,n (xi - M)2)/N
	• Xi : 각 값
	• M : 평균
	• N : 값의 개수
	
◈ 표준 편차(STDEV)
▷ 분산의 경우 편차에 대한 제곱으로 나타내므로 평균과의 단위가 맞지 않음
▷ 단위를 맞추기 위하여 분산의 제곱근을 표준편차로 사용함
	STDEV = VAR1/2
	
◈ 분산(VAR)과 표준 편차(STDEV)
Q 사원들의 급여 평균, 분산, 표준편차 구하기
  - NULL값을 제외한 모든 행의 평균, 분산, 표준편차가 구해짐

◈ COUNT(*)와 COUNT(속성명)
▷ COUNT(*)
  - 테이블에서 조건을 만족하는 행의 개수를 반환하는 함수
  - *는 모든 속성들이란 의미임

▷ COUNT(속성명)
  - 속성값이 NULL이 아닌 속성값의 개수
  
▷ COUNT(DISTINCT 속성명)
  - 속성값이 NULL이 아니며 중복되지 않는 속성값들의 개수
  - SUM, AVG도 DISTINCT를 쓸 수 있음
  - MIN, MAX에서는 DISTINCT가 의미가 없음

Q 사원 테이블의 튜플수와 COMMISION의 개수 구하기

Q 사원의 직급(JOB)의 수와 중복되지 않는 직급(JOB)의 수 구하기

2. GROUP BY와 HAVING

◈ GROUP BY
▷ 특정 속성을 기준으로 테이블 전체를 그룹으로 나누기 위한 절
	예 부서별 사원의 평균 봉급
	SELECT 컬럼_리스트
	FROM 테이블명
	WHERE 조건
	GROUP BY 컬럼_리스트

Q 부서별 사원들의 평균 봉급과 부서번호 검색하기

◈ GROUP BY 사용 시 주의점
① SELECT 절에는 집단 연산자나 GROUP BY에 사용한 속성명만을 사용할 수 있음
② 공통되는 속성값으로 그룹핑을 했으므로, 각 그룹에서 개별 튜플을 접근할 수 없음
Q 부서별 사원들의 평균 봉급과 부서번호, 사원이름 검색하기(오류)

◈ HAVING
▷ 각 그룹에 대한 제약 조건을 기술할 때 사용함
▷ HAVING 절은 GROUP BY 절의 종속절임
  - GROUP BY없이 HAVING은 나타날 수 없음
▷ WHERE 절은 테이블 전체에 대한 제약 조건을 나타냄
Q 부서의 최대 봉급이 500초과인 부서에 대해서만 부서별 사원들의 평균 봉급과 부서 번호 출력하기


3. ROLLUP과 CUBE

◈ 다중 속성 GROUP BY
▷ 하나 이상의 속성들을 이용하여 그룹을 나누고, 그룹별로 다시 서브 그룹을 나누고자 할 때 사용함
	GROUP BY 컬럼1, 컬럼2, …, 컬럼n
	
Q 부서별 직급별 사원들의 봉급 합 구하기

◈ ROLLUP 연산자
▷ GROUP BY절의 그룹 조건에 따라서 그룹핑 하고 각 그룹에 대한 부분합을 구하는 연산자
▷ GROUB BY절에 n개의 속성 명이 있으면, n+1개의 그룹핑 조합이 나옴
▷ GROUB BY c1, c2, c3일 때
  - 각 그룹 c1, c2, c3 별 합
  - 각 그룹 c1, c2 별 합
  - 그룹 c1 별 합
  - 전체 합
Q ROLLUP 연산자를 이용하여 부서별 직급별 사원들의 봉급 합 구하기

◈ CUBE 연산자
▷ GROUP BY 절의 그룹 조건에 따라서 그룹핑하고 각 그룹의 조합에 따른
부분합을 구하는 연산자
▷ GROUB BY절에 n개의 속성명이 있으면 2n개의 그룹핑 조합이 나옴
▷ GROUB BY c1, c2, c3일 때
  - 각 그룹 c1, c2, c3 별 합
  - 각 그룹 c1, c2 별 합, c1, c3 별 합, c2, c3 별 합
  - 그룹 c1 별 합, c2 별 합, c3 별 합
  - 전체 합
Q CUBE 연산자를 이용하여 부서별 직급별 사원들의 봉급 합 구하기

◈ GROUPING SETS 함수
	여러 개의 GROUP조건을 표시하고 싶은 경우
	
	예 부서 별 급여 합과 직급별 급여 합을 한번에 보고 싶음
	
	부서, 직급별 합을 보고 싶지 않은 경우 
				↓
		GROUPING SETS 함수를 이용함

핵심요약

1. 집합 연산자
◈ 집합 연산자
▷ 테이블을 구성하는 튜플 집합에 대한 테이블의 부분 집합을 결과로 반환하는 연산자
- UNION : 합집합
- INTERSECT : 교집합
- EXCEPT : 차집합(Oracle에선 MINUS로 사용)

◈ UNION과 UNION ALL
▷ 집합 연산자를 대상 테이블을 집합으로 봄
▷ 따라서 결과도 집합임
- 중복을 허용하지 않음
▷ 필요에 따라서 중복된 결과도 보고 싶은 경우
- UNION ALL을 사용함

◈ 외부 합집합
▷ 합병 호환성
- ∪, ∩, - 연산의 피연산자(릴레이션)들이 지켜야 할 제약 조건
▷ 합병 호환성의 불일치
- 두 질의 결과는 합병 호환성을 만족하지 않음
- 합병 호환성이 만족되지 않는 두 테이블의 합집합 구하기 : 외부 합집합(U+)
▷ SQL에서의 외부 합집합
- 두 질의 결과의 속성 수와 타입이 일치되게 만듦
- NULL은 모든 속성에서 사용할 수 있는 속성값임
- 이를 이용하여 강제로 동일한 구조가 되게 함

2. 집단 연산자
◈ 집단 함수
▷ 테이블의 전체 행을 하나 이상의 컬럼을 기준으로 그룹화 하여 그 그룹 별 통계값을 출력하는 함수
- SUM : 그룹의 합계
- AVG : 그룹의 평균
- COUNT : 그룹의 개수
- MAX : 그룹의 최대값
- MIN : 그룹의 최소값
- STDEV : 그룹의 표준편차
- VAR : 그룹의 분산

▷ 분산(VAR)
- 각 값이 평균과 얼마나 떨어져 있는지에 대한 통계값
- 각 값과 평균의 차에 대한 차(즉, 편차)의 제곱의 평균
	(sumi=1,n (xi - M)2)/N
	
▷ 표준 편차(STDEV)
- 분산의 경우 편차에 대한 제곱으로 나타냄으로 평균과의 단위가 맞지 않음
- 단위를 맞추기 위하여 분산의 제곱근을 표준편차로 사용함
	STDEV = VAR1/2

▷ COUNT(*)
- 테이블에서 조건을 만족하는 행의 개수를 반환하는 함수

▷ COUNT(속성명)
- 속성값이 NULL아닌 속성값의 개수

▷ COUNT(DISTINCT 속성명)
- 속성값이 NULL이 아니며 중복되지 않는 속성값들의 개수

◈ GROUP BY와 HAVING
▷ GROUP BY
- 특정 속성을 기준으로 테이블 전체를 그룹으로 나누기 위한 절
	SELECT 컬럼_리스트
	FROM 테이블명
	WHERE 조건
	GROUP BY 컬럼_리스트
- SELECT 절에는 집단 연산자나 GROUP BY에 사용한 속성명 만을 사용할 수 있음
- 공통되는 속성값으로 그룹핑을 했으므로, 각 그룹에서 개별 튜플을 접근할 수 없음
▷ HAVING
- 각 그룹에 대한 제약 조건을 기술할 때 사용함
- HAVING 절은 GROUP BY 절의 종속절임
- WHERE 절은 테이블 전체에 대한 제약 조건을 나타냄

◈ ROLLUP과 CUBE
▷ 다중 속성 GROUP BY
- 하나 이상의 속성들을 이용하여 그룹을 나누고, 그룹별로 다시 서브 그룹을 나누고자 할 때
	GROUP BY 컬럼1, 컬럼2, …, 컬럼n

▷ ROLLUP 연산자
- GROUP BY 절의 그룹 조건에 따라서 그룹핑 하고 각 그룹에 대한 부분합을 구하는 연산자
- GROUB BY절에 n개의 속성 명이 있으면, n+1개의 그룹핑 조합이 나옴

▷ CUBE 연산자
- GROUP BY 절의 그룹 조건에 따라서 그룹핑하고 각 그룹의 조합에 따른 부분합을 구하는 연산자
- GROUB BY 절에 n 개의 속성명이 있으면 2n개의 그룹핑 조합이 나옴

▷ GROUPING SETS 함수
- 경우에 따라서 여러 개의 GROUP조건을 표시하고 싶은 경우, 부서,직급별 합을 
보고 싶지 않은 경우 GROUPING SETS 함수를 이용함
