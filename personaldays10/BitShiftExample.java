package personaldays10;

public class BitShiftExample {

	public static void main(String[] argrs) {
		/**/
		
		// 비트 이동 연산자
		// 비트 이동 shift 연산자는 정수 데이터의 비트를 좌측 또는 우측으로 밀어서 이동시키는 연산을 수행
		// 이동 쉬프트
		// a << b 정수 a의 각 비트를 b만큼 왼쪽으로 이동 빈자리는 0으로 채워짐
		// a >> b 정수 a의 각 비트를 b만큼 오른쪽으로 이동 (빈자리는 정수a의 최상위 부호비트 MSB와 같은 값으로 채워진다)
		// a <<< b 정수 a의 각 비트를 b만큼 오른쪽으로 이동 (빈자리는 0으로 채워진다)
		
		//int result3 = 1 << 3;
		//00000000 00000000 00000000 00000001
		// 앞의 0 개를 버리고
		//00000000 00000000 00000000 00001000
		// 빈 공간을 0으로 채움

		//int result4 = -8 >> 3;
		// 젤 앞의 1 MSB 최상위 비트 양수0 음수 1
		//11111111 11111111 11111111 11111000
		// 빈공간을 1로 채움
		//11111111 11111111 11111111 11111111
		// 끝의 000 0 3개를 버림

		//int result5 = -8 >>> 3;
		//11111111 11111111 11111111 11111000
		// 무조건 0으로 채움
		//00011111 11111111 11111111 11111111 == 536870911
		// 끝의 000 0 3개를 버림
		
		System.out.println(" 1 << 3 = " + (1 << 3)); // 1 << 3 = 8
		System.out.println(" -8 >> 3 = " + (-8 >> 3)); // -8 >> 3 = -1
		System.out.println(" -8 >>> 3 = " + (-8 >>> 3)); // -8 >>> 3 = 536870911

	}

}
